#include<bits/stdc++.h>
bool isBipartite(int node,vector<int> &vis,vector<vector<int>> edges){
    vis[node]=0;
    queue<int> q;
    q.push(node);
    while(!q.empty()){
        node=q.front();
        q.pop();
        for(int i=0;i<edges[node].size();i++){
            if(edges[node][i]==1){
                if(vis[i]==-1){
                    vis[i]=1-vis[node];
                    q.push(i);
                }
                else if(vis[node]==vis[i])
                    return false;
            }
        }
    }
    return true;
}
bool isGraphBirpatite(vector<vector<int>> &edges) {
	// Write your code here.
    vector<int> vis(edges.size(),-1);
    for(int i=0;i<edges.size();i++){
        if(vis[i]==-1 && isBipartite(i,vis,edges)==false)
            return false;
    }
    return true;
}
