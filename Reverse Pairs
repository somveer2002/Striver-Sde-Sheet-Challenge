#include <bits/stdc++.h> 
int merge(vector<int> &arr,int l,int m,int r){
    int n1=m-l+1,n2=r-m;
    int a1[n1],a2[n2];
    for(int i=0;i<n1;i++)
        a1[i]=arr[l+i];
    for(int i=0;i<n2;i++)
        a2[i]=arr[m+1+i];
    int i=0,j=0,k=l,res=0;
    while(i<n1 && j<n2){
        if(a1[i]<=a2[j]){
            arr[k]=a1[i];
            k++;
            i++; 
        }
        else{
            int ub=upper_bound(a1+0,a1+n1,a2[j]*2)-(a1+0);
            res+=(n1-ub);  
            arr[k]=a2[j];
            j++;
            k++;    
   
        }
    }
    while(i<n1)
        arr[k++]=a1[i++];
    while(j<n2)
        arr[k++]=a2[j++];
   
    return res;
}
int modi_mergeSort(vector<int> &arr,int l,int r){
    int rev=0;
    if(l<r){
        int mid=(l+r)/2;
        rev+=modi_mergeSort(arr,l,mid);
        rev+=modi_mergeSort(arr,mid+1,r);
        rev+=merge(arr,l,mid,r);
    }
    return rev;
}
int reversePairs(vector<int> &arr, int n){
	// Write your code here.	
    int l=0,r=n-1;
    int res=modi_mergeSort(arr,l,r);
    return res;
}
