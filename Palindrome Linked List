#include <bits/stdc++.h> 
/****************************************************************

    Following is the class structure of the LinkedListNode class:

    template <typename T>
    class LinkedListNode
    {
    public:
        T data;
        LinkedListNode<T> *next;
        LinkedListNode(T data)
        {
            this->data = data;
            this->next = NULL;
        }
    };

*****************************************************************/
LinkedListNode<int> * reverse(LinkedListNode<int> * &);
LinkedListNode<int> * breakL(LinkedListNode<int> * &);
bool isPalindrome(LinkedListNode<int> *head) {
    // Write your code here.
    if(head==NULL || head->next==NULL) return true;
    LinkedListNode<int> *mid=breakL(head);
    LinkedListNode<int> *head2=reverse(mid);
    while(head && head2){
        if(head->data != head2->data)
            return false;
        head=head->next;
        head2=head2->next;
    }
    return true;
 

}
LinkedListNode<int> * breakL(LinkedListNode<int> * &head){
    LinkedListNode<int> *slow=head,*fast=head,*last=head;
    while(fast && fast->next){
        last=slow;
        slow=slow->next;
        fast=fast->next->next;
    }
    last->next=NULL;
    return slow;
}
LinkedListNode<int> * reverse(LinkedListNode<int> * &head){
    LinkedListNode<int> *t1=NULL,*t2=head,*t3=NULL;
    if(t2==NULL || t2->next==NULL)
        return t2;
    t3=t2->next;
    while(t2){
        t2->next=t1;
        t1=t2;
        t2=t3;
        if(t3!=NULL)
            t3=t3->next;
           
    }
    return t1;
}



