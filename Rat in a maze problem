#include<bits/stdc++.h>
void solve(int x,int y,vector<vector<int>> &vis,vector<vector<int>> &res,vector<vector<int>> maze,int n){
    if(x==n-1 && y==n-1){
        vis[x][y]=1;
        vector<int> temp;
        for(int i=0;i<n;i++){
            temp.insert(temp.end(),vis[i].begin(),vis[i].end());
        }
        res.push_back(temp);
        vis[x][y]=0;
        return;
    }
    
    //downward
    if(x+1<n && !vis[x+1][y] && maze[x+1][y]){
        vis[x][y]=1;
        solve(x+1,y,vis,res,maze,n);
        vis[x][y]=0;
    }
    
    //leftward
    if(y-1>=0 && !vis[x][y-1] && maze[x][y-1]){
        vis[x][y]=1;
        solve(x,y-1,vis,res,maze,n);
        vis[x][y]=0;
    }
    
    //rightward
    if(y+1<n && !vis[x][y+1] && maze[x][y+1]){
        vis[x][y]=1;
        solve(x,y+1,vis,res,maze,n);
        vis[x][y]=0;
    }
    
//     upward
    if(x-1>=0 && !vis[x-1][y] && maze[x-1][y]){
        vis[x][y]=1;
        solve(x-1,y,vis,res,maze,n);
        vis[x][y]=0;
    }
}
vector<vector<int> > ratInAMaze(vector<vector<int> > &maze, int n){
  // Write your code here.
    vector<vector<int>> res,vis(n,vector<int>(n,0));
    if(maze[0][0]==0 || maze[n-1][n-1]==0)
        return res;
    solve(0,0,vis,res,maze,n);
    return res;
}
