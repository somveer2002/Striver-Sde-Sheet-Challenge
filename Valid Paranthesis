bool isValidParenthesis(string expression)
{
    stack<char> st;
    for(int i=0;i<expression.length();i++){
        if(expression[i]=='[' || expression[i]=='{' || expression[i]=='('){
            st.push(expression[i]);
        }
        else{
            if(st.empty())
                return false;
            if(expression[i]==']' && st.top()=='[')
                st.pop();
            else if(expression[i]=='}' && st.top()=='{')
                st.pop();
            else if(expression[i]==')' && st.top()=='(')
                st.pop();
            else
                return false;
        }
    }
    return (st.empty());
    // Write your code here.
}
