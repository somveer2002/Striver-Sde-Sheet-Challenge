#include<bits/stdc++.h>
bool checkCycle(int i,vector<int> adj[],vector<int> &vis){
    queue<pair<int,int>> q;
    q.push({i,-1});
    vis[i]=1;
    while(!q.empty()){
        int node=q.front().first;
        int par=q.front().second;
        q.pop();
        
        for(auto x:adj[node]){
            if(vis[x]!=1){
                vis[x]=1;
                q.push({x,node});
            }
            else if(par!=x)
                return true;
        }
    }
    return false;
}
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    vector<int> adj[n+1];
    for(int i=0;i<edges.size();i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<int> vis(n+1,0);
    for(int i=1;i<=n;i++){
        if(vis[i]!=1){
            if(checkCycle(i,adj,vis))
                return "Yes";
        }
    }
    return "No";
    // Write your code here.
}
