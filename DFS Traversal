#include<bits/stdc++.h>
void dfs(int node,vector<int> adj[],vector<int> &vis,vector<int> &temp){
    temp.push_back(node);
    vis[node]=1;
    for(auto x:adj[node]){
        if(vis[x]==0)
            dfs(x,adj,vis,temp);
    }
}
vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    vector<int> adj[V];
    for(int i=0;i<edges.size();i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<vector<int>> res;
    vector<int> vis(V,0);
    for(int i=0;i<V;i++){
        if(!vis[i]){
            vector<int> temp;
            dfs(i,adj,vis,temp);
            sort(temp.begin(),temp.end());
            res.push_back(temp);
            
        }
    }
    sort(res.begin(),res.end());
    return res;
    // Write your code here
}
