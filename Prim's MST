#include<bits/stdc++.h>

vector<pair<pair<int, int>, int>> calculatePrimsMST(int n, int m, vector<pair<pair<int, int>, int>> &g)
{
    // Write your code here.
    vector<pair<int,int>> adj[n+1];
    for(int i=0;i<g.size();i++){
        adj[g[i].first.first].push_back({g[i].first.second,g[i].second});
        adj[g[i].first.second].push_back({g[i].first.first,g[i].second});
    }
    vector<int> key(n+1,INT_MAX),mst(n+1,0),par(n+1,-1);
    key[1]=0;
    for(int cnt=0;cnt<n-1;cnt++){
        int mini=INT_MAX,node;
        for(int j=1;j<n+1;j++){
            if(mst[j]==0 && key[j]<mini){
                mini=key[j];
                node=j;
            }
        }
        mst[node]=1;
        for(auto x:adj[node]){
            if(mst[x.first]==false && x.second<key[x.first]){
                key[x.first]=x.second;
                par[x.first]=node;
            }
        }
    }
    vector<pair<pair<int,int>,int>> res;
    for(int i=2;i<n+1;i++){
        pair<int,int> t;
        t.first=par[i];
        t.second=i;
        res.push_back({t,key[i]});
    }
    return res;
}
